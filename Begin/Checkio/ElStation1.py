'''Дано выражение с цифрами, скобками и операторами. В данной задаче важны только скобки. Скобки представлены в трех вариациях: "{}" "()" и "[]". Скобки используются, чтобы определить порядок применения операторов или ограничить участок выражения. Если скобка открывается, то она должна закрываться скобкой того же типа. Участки ограниченные одной парой скобок, не должны пересекаться с участками других скобок. В этой задаче, вам необходимо определить правильное ли выражение или нет, основываясь на расположении скобок. И не обращайте внимание на операторы и операнды.
Входные данные: Выражение для проверки, как строка (str, unicode).
Выходные данные: Решение, правильное выражение или нет, как булево значение (True или False).
Примеры:
checkio("((5+3)*2+1)") == True
checkio("{[(3+1)+2]+}") == True
checkio("(3+{1-1)}") == False
checkio("[1+1]+(2*2)-{3/3}") == True
checkio("(({[(((1)-2)+3)-3]/3}-3)") == False
checkio("2+3") == True
Зачем это надо: Когда вы пишите большие формулы в вашем любимой математической программе. то лишняя или пропущеная скобка может превратится в очень сильную головную боль. И вот здесь то и необходим данный концепт, который используется во многих IDE.
Предусловия:
Выражение содержит только скобки ("{}" "()" or "[]"), цифры и/или операторы ("+" "-" "*" "/").
0 < len(expression) < 103
'''
регулярки??
1. проверка на кол-во открывающих == закрывающих ()
2. нарезка по откр-закрывающим (find) и проверка на наличие незакрытых другого типа ??